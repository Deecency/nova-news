import 'package:dio/dio.dart';import 'package:flutter/material.dart';import 'package:news_app/services/network/error_handler.dart';import 'package:news_app/shared/size_config/extensions.dart';class K {  const K._();  static Duration networkTimeout = const Duration(seconds: 30);  static const baseUrl = "https://newsapi.org/v2";  static List<String> NEWS_TABBAR_ICONS = [    "",    "assets/icons/Pie Chart 2.png",    "assets/icons/Emoji Funny Square.png",    "assets/icons/Pill.png",    "assets/icons/Star Rings.png",    "assets/icons/Football.png",    "assets/icons/Programming.png",  ];  static List<String> NEWS_TABBAR_TEXTS = [    "ðŸ”¥ All",    "business",    "entertainment",    "health",    "science",    "sports",    "technology",  ];  static void handleError(BuildContext context, {required e, data}) {    String message = "";    if (e is DioException) {      ErrorHandler errorHandler = ErrorHandler.dioException(error: e);      message = errorHandler.getErrorMessage();    } else {      ErrorHandler errorHandler = ErrorHandler.otherException();      message = errorHandler.getErrorMessage();    }    Map<String, dynamic> errorData = {};    errorData = {      "error": "Error",      "message": message,      "subStatusCode": "",      "loginData": data,    };    if (context.mounted) showErrorModal(context, errorData);  }}showErrorModal(context, Map<String, dynamic> error) {  showModal(context, height: 320.relHeight, child: StatefulBuilder(builder: (context, setState) {    return Column(      children: <Widget>[        Image.asset(          "assets/images/icons/warning.png",          height: 90.relHeight,        ),        20.vSpacer,        Text(          error["error"] ?? "",          textAlign: TextAlign.center,        ),        20.vSpacer,        Padding(          padding: EdgeInsets.symmetric(horizontal: 40.relWidth),          child: Text(            error["message"] ?? "",            textAlign: TextAlign.center,          ),        ),      ],    );  }));}showModal(context, {height, isDismissible = false, required child, bool useRootNavigator = false}) {  showModalBottomSheet(    context: context,    backgroundColor: Colors.white,    useRootNavigator: useRootNavigator,    barrierColor: const Color(0xFF9CA3AF).withOpacity(0.2),    // isDismissible: isDismissible,    isScrollControlled: true,    //elevates modal bottom screen    elevation: 10,    shape: RoundedRectangleBorder(      borderRadius: BorderRadius.only(          topRight: Radius.circular(            32.relHeight,          ),          topLeft: Radius.circular(32.relHeight)),    ),    builder: (BuildContext context) {      return Padding(        padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),        child: Container(          height: height,          decoration: BoxDecoration(            borderRadius: BorderRadius.vertical(top: Radius.circular(32.relHeight)),            color: Colors.white,          ),          padding: EdgeInsets.symmetric(horizontal: 24.relWidth),          child: Center(            child: Column(              children: [                12.vSpacer,                Container(                  height: 5.relHeight,                  width: 56.relWidth,                  decoration: BoxDecoration(                    borderRadius: BorderRadius.all(                      Radius.circular(32.relHeight),                    ),                    color: Colors.grey,                  ),                ),                24.vSpacer,                child              ],            ),          ),        ),      );    },  );}